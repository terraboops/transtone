name: "Trans Tone"
on:
  push:
    branches:
      - main
jobs:
  # First Job
  install-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          npm install
      # For testing
      - name: Run tests
        run: |
          npm test
  # Android Job
  build-android:
    needs: install-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          npm install

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew
        # Build Command

      - name: Build Android Release
        run: |
          cd android && gradlew assembleRelease --no-daemon
      
      # Upload to Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/
  # # iOS Job
  # build-ios:
  #   needs: install-and-test
  #   runs-on: macOS-latest
  #   steps:
  #   defaults:
  #     run:
  #       working-directory: ios

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v2

  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     - name: Restore node_modules from cache
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile --network-timeout 300000

  #     - name: Setup Ruby (bundle)
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 2.7.6
  #         bundler-cache: true

  #     - name: Restore Pods cache
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ios/Pods
  #           ~/Library/Caches/CocoaPods
  #           ~/.cocoapods
  #         key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pods-
  #     - name: Install Pods
  #       run: pod install --repo-update
  #     - name: Build?